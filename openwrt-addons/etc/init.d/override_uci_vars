#!/bin/sh /etc/rc.common
. /tmp/loader

START=01

kmodule_is_deactivated()
{
	grep -q ^"#" "/etc/modules.d/"*"$1"	# e.g. batman-adv -> 50-batman-adv
}						# e.g. ebtables -> ebtables

kmodule_force_activation()
{
	kmodule_is_deactivated "$1" && sed -i 's/^[^a-z]*//' "/etc/modules.d/"*"$1"
}

kmodule_force_deactivation()
{
	kmodule_is_deactivated "$1" || sed -i 's/^/# &/' "/etc/modules.d/"*"$1"
}

kmodules_group_deactivate()
{
	local group="$1"	# e.g. 'ipt-*'
	local file

	for file in /etc/modules.d/$group ; do {
		file="$( basename "$file" )"
		kmodule_is_deactivated "$file" || kmodule_force_deactivation "$file"
	} done
}

kmodules_group_activate()
{
	local group="$1"	# e.g. 'ipt-*'
	local file

	for file in /etc/modules.d/$group ; do {
		file="$( basename "$file" )"
		kmodule_is_deactivated "$file" && kmodule_force_activation "$file"
	} done
}

boot()
{
	local list

	for PROG in ulogd firewall sysntpd; do {
		[ -e "/etc/init.d/$PROG" ] || continue
		/etc/init.d/$PROG enabled && /etc/init.d/$PROG disable
	} done

	grep -sq ^'STOP=' '/etc/init.d/network' && {
		sed -i 's/^STOP=/# &/' '/etc/init.d/network'
	}

	if [ -e '/etc/init.d/apply_profile' ]; then
		[ -s '/www/cgi-bin-welcome.sh'	] || ln -s '/www/cgi-bin-welcome'   '/www/cgi-bin-welcome.sh'
		[ -s '/www/cgi-bin-sql.sh'	] || ln -s '/www/cgi-bin-sql'	    '/www/cgi-bin-sql.sh'
		[ -s '/www/cgi-bin-tool.sh'	] || ln -s '/www/cgi-bin-tool_fff+' '/www/cgi-bin-tool.sh'

		uci set uhttpd.main.interpreter=".sh=/bin/ash"

		[ -n "$LOWMEM" ] && {
			kmodules_group_deactivate '*'
			kmodules_group_activate   'zram'
			kmodules_group_activate   'lib-lzo'
			kmodules_group_activate   'b44'

#			kmodules_group_deactivate  'ipt-*'
#			kmodule_force_deactivation 'b43'
#			kmodule_force_deactivation 'mac80211'
#			kmodule_force_deactivation 'cfg80211'	# includes compat
#			kmodule_force_deactivation 'ipv6'
#			kmodule_force_deactivation 'ip6tables'

			/etc/init.d/odhcpd disable
		}

		return 0
	else
		[ -n "$LOWMEM" ] && {
			kmodules_group_deactivate '*'		# unneeded, but doesnt hurt (for old nodes)
			kmodules_group_activate   'zram'
			kmodules_group_activate   'lib-lzo'
			kmodules_group_activate   'b44'

			# gpio_button_hotplug leds_gpio - needed?

			kmodule_force_activation 'b43'
			kmodule_force_activation 'mac80211'
			kmodule_force_activation 'cfg80211'	# includes compat
			# allow 'switch', 'diag'

			needs_full_kmodules()
			{
				_net local_inet_offer >/dev/null && return 0
				test -e '/www/SIMPLE_MESHNODE' && return 1

				return 0
			}

			# for F in /etc/modules.d/*; do echo "# $F"; cat $F; done
			needs_full_kmodules && {
				kmodule_force_activation 'ipt-core'
						# has:  x_tables xt_tcpudp ip_tables iptable_filter iptable_mangle xt_limit 
						#       xt_mac xt_multiport xt_comment ipt_LOG xt_TCPMSS ipt_REJECT
						# need: x_tables xt_tcpudp ip_tables iptable_filter iptable_mangle   ---
						#       xt_mac    ---          ---      ---    xt_TCPMSS ipt_REJECT

				kmodule_force_activation 'ipt-conntrack'
						# has:  nf_conntrack nf_defrag_ipv4 nf_conntrack_ipv4 xt_state
						#       iptable_raw xt_NOTRACK xt_CT xt_conntrack
						# need: nf_conntrack nf_defrag_ipv4 nf_conntrack_ipv4   ---
						#           ---        ---      ---     ---

				kmodule_force_activation 'ipt-nat'
						# has:  nf_nat iptable_nat ipt_MASQUERADE
						# need: nf_nat iptable_nat     ---

				# spÃ¤testens hier braucht es eine funktion die spezifisches
				# kernelmodul (egal in welcher datei) freischaltet
				kmodule_force_activation 'ipt-ipopt'
						# has:  xt_mark + sehr viele
						# need: xt_mark
			}
		}
	fi

	case "$HARDWARE" in
		'TP-LINK TL-WDR4900'*)
			# we use the button to trigger an WPS-action/soundplayer
			[ -e '/etc/rc.button/reset' ] && rm '/etc/rc.button/reset'
		;;
	esac

	[ -e '/www/cgi-bin-status.html' ] || {
		_http redirect '302' 'cgi-bin-status.sh' 'html_only' >'/www/cgi-bin-status.html'
	}

	# disable OLSRd1 - IPv6
	[ -e '/etc/config/olsrd6' ] && uci set olsrd6.@olsrd[0].disabled=1

	# mark end of startup-sequence
	grep -q "ENDBOOT" '/etc/init.d/done' || sed -i 's|^}|\n	touch /tmp/ENDBOOT\n}|' '/etc/init.d/done'

	# fix sysupgrade, see patch in r39169:
	[ $( _system version short ) -eq 39139 ] && {
		grep -q ' mount ' '/etc/init.d/boot' && {
			sed -i 's| mount | /bin/mount |' '/etc/init.d/boot'
			sed -i 's|umount |/bin/umount |' '/etc/init.d/umount'
			sed -i 's|mount |/bin/mount |' '/lib/functions.sh'
			sed -i 's|umount -l |/bin/umount -l |' '/lib/upgrade/common.sh'
			sed -i 's|mount -o |/bin/mount -o |' '/lib/upgrade/common.sh'
			sed -i 's#mount | #/bin/mount | #' '/lib/upgrade/common.sh'
		}
	}

	# https://dev.openwrt.org/ticket/14705
	[ $( _system version short ) -le 39218 ] && {
		local file='/lib/netifd/wireless/mac80211.sh'
		local pattern='json_get_vars bssid ssid basic_rate key'
		grep -sq "$pattern"$ "$file" && {
			sed -i "s/$pattern/$pattern mcast_rate/" "$file"
		}
	}

	# no DNS-responses on WAN from outside
	[ "$( uci get dhcp.@dnsmasq[0].notinterface )" = "wan" ] || {
		_net local_inet_offer >/dev/null && {
			uci set dhcp.@dnsmasq[0].notinterface='wan'	# add pppoe-wan?
		}
	}

	[ $( _system version short ) -eq 38043 ] && {
		grep -q 'sleep 30' '/etc/init.d/olsrd' || {
			sed -i 's/^start() {$/&\nsleep 30/' '/etc/init.d/olsrd'
		}
	}

	get_wifi()
	{
		local var="$1"		# e.g. network
		local value="$2"	# e.g. value-wish
		local output="$3"	# e.g. index OR channel OR check
		local i radio

		for i in $(seq 0 15); do {
			[ "$( uci -q get wireless.@wifi-iface[$i].$var )" = "$value" ] && {
				case "$output" in
					'check')
					;;
					'channel')
						radio="$( uci get wireless.@wifi-iface[$i].device )"
						uci get wireless.$radio.channel
					;;
					*)
						echo "$i"
					;;
				esac

				return 0
			}
		} done

		return 1
	}

	set_wifi()	# e.g.: set_wifi ap 5ghz ssid 'Appartementhaus'
	{
		local i radio
		local wifimode="$1"	# e.g. 'ap' or 'any'
		local band="$2"		# e.g. '5ghz' or 'any'
		local var="$3"		# e.g. 'ssid'
		local value="$4"	# e.g. 'myssid'
		local option="$5"

		for i in $(seq 0 15); do {
			[ "$( uci -q get wireless.@wifi-iface[$i].mode )" = "$wifimode" -o "$wifimode" = 'any' ] && {
				if   [ "$band" = 'any' ]; then
					:
				elif [ "$band" = '2ghz' ]; then
					is_2ghz "$i" || continue
				else 	# wish: 5ghz
					is_2ghz "$i" && continue
				fi

				case "$var" in
					'txpower'|'htmode')
						# http://opus4.kobv.de/opus4-tuberlin/files/3939/huehn_thomas.pdf
						# get the corresponding radio till minstrel-blues/power control is not active
						radio="$( uci get wireless.@wifi-iface[$i].device )" && {
							uci set wireless.$radio.$var="$value"
						}
					;;
					'channel'|'chanbw')
						radio="$( uci get wireless.@wifi-iface[$i].device )"
						uci set wireless.$radio.$var="$value"

						[ "$var" = 'channel' ] && {
							[ $value -ge 1 -a $value -le 11 ] && {
								uci set wireless.$radio.country='US'
							}

							[ "$option" = 'bssid_wellformed' ] && {
								local bssid='02:be:ef:ca'

								if [ "$value" -lt 100 ]; then
									if [ "$var" -lt 10 ]; then
										bssid="${bssid}:00:0${value}"
									else
										bssid="${bssid}:00:${value}"
									fi
								else
									bssid="${bssid}:0$( echo "$value" | cut -b 1 ):$( echo "$value" | cut -b 2-3 )"
								fi

								uci set wireless.@wifi-iface[$i].bssid="$bssid"
							}
						}
					;;
					*)
						uci set wireless.@wifi-iface[$i].$var="$value"
					;;
				esac
			}
		} done
	}

	# AP = autochannel
	case "$CONFIG_PROFILE" in
		*_ap)
			# typically the mesh is on channel 11
			uci set wireless.radio0.channel="$( _math random_integer 1 7 )"

			case "$( uci get wireless.radio0.htmode )" in
				'HT40'*)
					uci set wireless.radio0.htmode='HT20'
				;;
			esac
		;;
	esac

	needs_ipv6_disable()
	{
		case "$CONFIG_PROFILE" in
			boltenhagendh*|dhsylt*|schoeneck*)
				return 0
			;;
		esac

		test -n "$LOWMEM"
	}

	needs_ipv6_disable && {
		/etc/init.d/6relayd enabled && /etc/init.d/6relayd disable	# removed in r40893
		/etc/init.d/odhcpd  enabled && /etc/init.d/odhcpd  disable
		uci set network.wan6.disabled=1
		uci set network.wan6.ifname=
	}

	needs_serial_console_disable()
	{
		case "$CONFIG_PROFILE" in
			boltenhagendh*|dhsylt*|schoeneck*)
				return 0
			;;
		esac

		test -n "$LOWMEM"
	}

	needs_serial_console_disable && {
		grep "::askconsole:" "/etc/inittab" | grep -q ^"#" || sed -i 's/^.*::askconsole:.*/# &/' "/etc/inittab"
		grep "::askfirst:"   "/etc/inittab" | grep -q ^"#" || sed -i 's/^.*::askfirst:.*/# &/'   "/etc/inittab"
	}

	# mail: send via scp OR oldskool
	case "$CONFIG_PROFILE" in
		ffweimar*|extrawatt*|ibfleesensee*|tuberlin*|versilia*)
			# needs setup
		;;
		xoai*|leonardo*|cupandcoffee*|marinabh*|liszt28*|satama*|fparkssee*|dhsylt*|boltenhagendh*|schoeneck*|apphalle*|castelfalfi*|itzehoe*|ejbw*|adagio*|aschbach*|dhfleesensee*|olympia*|paltstadt*|rehungen*|spbansin*|tkolleg*|limona*|berlinle*|monami*|marinapark*)
			uci set mail.@smtp[0].mail='logins@bluebottle.com'
			uci set mail.@smtp[0].auth='-P 222 bastian@bwireless.mooo.com:kalua_mail'
		;;
	esac

	if [ -n "$LOWMEM" ]; then
		case "${CONFIG_PROFILE}-${NODENUMBER}" in
			lisztwe_ap-15)
			;;
			*)
				[ -n "$( uci get dhcp.@dnsmasq[0].dhcpscript )" ] && uci delete 'dhcp.@dnsmasq[0].dhcpscript'
			;;
		esac

		case "$CONFIG_PROFILE" in
			*_ap)
				[ -z "$( uci get olsrd.@meta[0].hnaslave )" ] && {
					_net local_inet_offer >/dev/null || uci set olsrd.@meta[0].hnaslave=1
				}
			;;
			*_adhoc)
				[ -e "/www/SIMPLE_MESHNODE" ] || {
					# unforce stricter kmodule unloading
					touch "/www/SIMPLE_MESHNODE"
					rm "/www/GOOD_MODULE_UNLOAD"
				}
			;;
		esac
	else
		if [ $( _system ram_size ) -gt 32768 ]; then
			uci set uhttpd.main.max_requests=10
		else
			uci set uhttpd.main.max_requests=3
		fi
	fi

	is_2ghz()
	{
		local wifi_iface="$1"
		local radio="$( uci get wireless.@wifi-iface[${wifi_iface}].device )"
		local channel="$( uci get wireless.${radio}.channel )"

		# this is dirty, we must take hwmode into account, because 7-12 can also be 5ghz
		test ${channel:-0} -lt 15
	}

	remove_section()
	{
		local check_var="$1"	# e.g. network.@alias[].interface
		local check_value="$2"	# e.g. loopback
		local p1="$( echo "$check_var" | cut -d'[' -f1 )"
		local p2="$( echo "$check_var" | cut -d']' -f2 )"

		local i
		for i in $( seq 15 -1 0 ); do {
			while [ "$( uci get -q "${p1}[$i]${p2}" )" = "$check_value" ]; do {
				uci delete "${p1}[$i]"
			} done
		} done
	}

	apply_cronwatchdog()	# cron-watchdog via netifd-dhcp-hotplug-call: iface/60-dyndns
	{
		remove_section "network.@alias[].interface" 'loopback'
		uci add network 'alias'
		uci set network.@alias[-1].interface='loopback'
		uci set network.@alias[-1].proto='dhcp'
		uci set network.@alias[-1].defaultroute='0'	# dont apply default route
		uci set network.@alias[-1].peerdns='0'		# and DNS

		remove_section "dhcp.@host[].name" 'lo-alias'
		uci add dhcp 'host'
		uci set dhcp.@host[-1].ip='127.0.0.2'
		uci set dhcp.@host[-1].mac='00:00:00:00:00:00'
		uci set dhcp.@host[-1].name='lo-alias'

		remove_section "dhcp.@dhcp[].interface" 'loopback'
		uci add dhcp 'dhcp'
		uci set dhcp.@dhcp[-1].interface='loopback'
		uci set dhcp.@dhcp[-1].start='2'
		uci set dhcp.@dhcp[-1].limit='2'
		uci set dhcp.@dhcp[-1].leasetime='1h'
		uci set dhcp.@dhcp[-1].force='1'
		uci set dhcp.@dhcp[-1].ignore='0'
	}

	[ -z "$LOWMEM" ] && apply_cronwatchdog

	case "$CONFIG_PROFILE" in
		apphalle*)
			list="0174/3564025"
		;;
		schoeneck*)
			list="01729094456"
		;;
		aschbach*|hotello*)
			list="01728117657 01727772555 01775906689"
		;;
		liszt28*)
			list=
		;;
		spbansin*|itzehoe*)
			list="01601531855"
		;;
		tkolleg*)
			list="01714338506"
		;;
		dhfleesensee*)
			list="01604797497"
		;;
		satama*)
			# list="016096378028"
		;;
		ejbw*)
			list="01622666169"	# lars
		;;
		rehungen*)
			list=
		;;
	esac
	uci set sms.@sms[0].admin="0176/24223419 $list"


	# see /usr/sbin/cron.reverse_ssh_tunnel
	case "$CONFIG_PROFILE" in
		extrawatt*|shankar*|fparkssee*|limona*|marinapark*|versiliaje*|cupandcoffee*)
			uci set system.@monitoring[0].maintenance='reverse_sshtunnel'

			case "$NODENUMER-$CONFIG_PROFILE" in
				DISABLED-3-berlinle*)
					uci set system.@monitoring[0].maintenance_force='1'
				;;
			esac
		;;
		marinabh*|amalienhof*)
			uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
			uci set system.@monitoring[0].maintenance_ports='22 80'
		;;
	esac

	case "$CONFIG_PROFILE" in
		castelfalfi*)
			uci set system.@weblogin[0].force_lan_reachable='1'
		;;
		fparkssee*|satama*|marinapark*)
			[ -z "$LOWMEM" ] && uci set olsrd.@meta[0].hnaslave=0

			case "$NODENUMBER" in
				# fparkssee-E1-buero|marinapark-buero
				223|10)
					set_wifi adhoc any mcast_rate '1000'
				;;
				*)
					set_wifi adhoc any mcast_rate '6000'
				;;
			esac

			set_wifi adhoc 2ghz channel '11'
			set_wifi adhoc 2ghz bssid '02:ca:ff:ee:00:11'

			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ffeth'
		;;
		apphalle*)
			uci set olsrd.@meta[0].hnaslave=0

			set_wifi ap    any  ssid "$( _weblogin metadata_locationname | cut -d' ' -f1 ) $NODENUMBER"
			set_wifi ap    5ghz disabled '1'	# !!!
			set_wifi any   5ghz txpower '19'
			set_wifi any   2ghz txpower '16'
			set_wifi any   any  htmode 'HT20'
			set_wifi adhoc 5ghz ssid 'x'
			set_wifi adhoc 2ghz ssid 'X'
		;;
		xoai*)
			uci set system.@system[0].timezone='ICT-7'

			set_wifi any   5ghz disabled '1'	# !!!
			set_wifi ap    2ghz ssid 'hotelxoai.com'
			set_wifi adhoc 2ghz ssid 'x'
		;;
		amalienhof*)
			uci set olsrd.@meta[0].hnaslave=0
			set_wifi ap 2ghz ssid 'Borbing'
		;;
		liszt28*)
			uci set system.@weblogin[0].logtraffic='1'

			case "$NODENUMBER" in
				# alrik|danny|frenzel|bueroAussen|carsten|F36dach|rewe|bueroInnen|eckermann1|TobiNoEther|Schwan
				278|280|262|261|273|269|279|222|33|265|375)
					set_wifi ap    5ghz disabled '1'
					set_wifi adhoc 2ghz mcast_rate '1000'
				;;
				*)
					set_wifi adhoc any  mcast_rate '6000'
				;;
			esac

			case "$NODENUMBER" in
				375)
					set_wifi ap 2ghz ssid 'weimarnetz (WeisserSchwan)'
				;;
				337)
					set_wifi ap 2ghz ssid 'weimarnetz (Emilio)'
				;;
				279)
					set_wifi ap 2ghz ssid 'weimarnetz (REWE)'
				;;
				280)
					set_wifi ap 2ghz ssid 'weimarnetz (Danny)'
				;;
				274)
					set_wifi ap 2ghz ssid 'weimarnetz (F36dach)'
				;;
				276)
					set_wifi ap 2ghz ssid 'weimarnetz (F36keller)'
				;;
				275)
					set_wifi ap 2ghz ssid 'weimarnetz (F36mitte)'
				;;
				277)
					set_wifi ap 2ghz ssid 'weimarnetz (F36stube)'
				;;
				278)
					set_wifi ap 2ghz ssid 'weimarnetz (meyer8)'
					set_wifi ap 5ghz ssid 'weimarnetz (meyer8a)'
				;;
				*)
					set_wifi ap    2ghz ssid "weimarnetz (Schlachthof-${NODENUMBER})"
					set_wifi ap    5ghz ssid "weimarnetz (Schlachthof-${NODENUMBER}a)"
				;;
			esac

			case "$NODENUMBER" in
				348)
					# TowerPower
					uci set dhcp.lan.ignore=1
				;;
				266|278|273)
					# ina|alrik|carsten
					uci set system.@monitoring[0].switch_error='ignore'
				;;
			esac

			case "$NODENUMBER" in
				266)
					# ina
					uci set system.@weblogin[0].enabled='0'
				;;
			esac

			uci set olsrd.@meta[0].hnaslave=0
			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ff'

			set_wifi adhoc 2ghz ssid 'weimarnetz'
			set_wifi adhoc 2ghz channel '5'
			set_wifi adhoc 2ghz bssid '02:ca:ff:ee:ba:be'

			set_wifi adhoc 5ghz ssid 'weimarnetz-5Ghz'
			set_wifi adhoc 5ghz channel '40'
			set_wifi adhoc 5ghz bssid '02:ca:ff:ee:00:40'
		;;
		ejbw*)
			uci set olsrd.@meta[0].hnaslave=0
			set_wifi adhoc 2ghz bssid '02:be:ef:ca:ff:ee'

			case "$NODENUMBER" in
				100)
					uci set dhcp.lan.ignore=1

					uci add network alias
					uci set network.@alias[-1].interface="lan"
					uci set network.@alias[-1].proto=static
					uci set network.@alias[-1].ipaddr=192.168.112.2
					uci set network.@alias[-1].netmask=255.255.255.0
					uci set network.@alias[-1].gateway=192.168.112.1

					uci add system netfilter
					uci set system.@netfilter[-1].lan_masquerading=0	# disables lan-masq
				;;
				101)
					uci add network alias
					uci set network.@alias[-1].interface="lan"
					uci set network.@alias[-1].proto=static
					uci set network.@alias[-1].ipaddr=192.168.10.2
					uci set network.@alias[-1].netmask=255.255.255.0
					uci rename network.@alias[-1]=myLAN

					uci add network route
					uci set network.@route[-1].interface="myLAN"
					uci set network.@route[-1].target=192.168.0.0
					uci set network.@route[-1].netmask=255.255.255.0
					uci set network.@route[-1].gateway=192.168.10.1

					uci add olsrd Hna4
					uci set olsrd.@Hna4[-1].netaddr=192.168.10.0
					uci set olsrd.@Hna4[-1].netmask=255.255.255.0

					uci add olsrd Hna4
					uci set olsrd.@Hna4[-1].netaddr=192.168.0.0
					uci set olsrd.@Hna4[-1].netmask=255.255.255.0
				;;
			esac
		;;
		dhsylt_adhoc)
			uci set wireless.radio0.htmode="HT20"
			uci set wireless.@wifi-iface[0].ssid="o"
		;;
		leonardo*)
			uci set olsrd.@meta[0].hnaslave=0
		;;
		tkolleg*)
			uci set olsrd.@meta[0].hnaslave=0
			uci set system.@timeserver[0].server='10.10.0.1'
		;;
		marinabh_ap)
			uci set wireless.radio0.htmode="HT20"
			[ "$NODENUMBER" = "2" ] && uci set wireless.radio0.disabled=1
			uci set olsrd.@meta[0].hnaslave=0
		;;
		marinabh_hybrid)
			uci set wireless.@wifi-iface[0].mcast_rate=18000
		;;
		adagio*)
			set_wifi adhoc 2ghz channel '11'
			set_wifi adhoc 2ghz bssid '02:ca:ff:ee:00:11'
		;;
		rehungen*)
			uci set system.@weblogin[0].logtraffic='1'

			case "$NODENUMBER" in
				113)
					# hostname = kirchgasse34kinderzimmer-unten
					# nexthop = node5 = hauptstrasse40b-NEU2
					# lanmac seen: 70:1a:04:b1:e6:40
					uci set system.@weblogin[0].blocked='true'
				;;
			esac

			case "$HARDWARE" in
				"TP-LINK TL-WR1043ND")
					case "$CONFIG_PROFILE" in
						*adhoc)
							uci set wireless.@wifi-iface[0].bssid="02:be:ef:ca:ff:ee"
						;;
						*hybrid)
							uci set wireless.@wifi-iface[0].bssid="02:be:ef:ca:ff:ee"
							uci set wireless.@wifi-iface[1].ssid="Rehungen $NODENUMBER"
						;;
					esac
				;;
				*)
					uci set system.@weblogin[0].blocked='true'
					uci set dhcp.lan.ignore=1
					uci set dhcp.wlan.ignore=1

					case "$HARDWARE" in
						'Ubiquiti Bullet M')
							uci set wireless.radio0.channel='36'
							uci set wireless.@wifi-iface[0].bssid='02:be:ef:ca:00:36'
							uci delete 'wireless.radio0.chanbw'
							uci set wireless.radio0.txpower='19'
							uci set wireless.radio0.beacon_int='10000'
							uci set wireless.@wifi-iface[0].mcast_rate='24000'
						;;
					esac

					longshot()
					{
						local channel chanbw node mcast_rate

						while [ -n "$1" ]; do {
							case "$1" in
								'mcast')
									mcast_rate="$2"
									shift
								;;
								'channel')
									channel="$2"
									shift
								;;
								'chanbw')
									chanbw="$2"
									shift
								;;
								'nodes')
									for node in $2; do {
										[ "$NODENUMBER" = "$node" ] && {
											[ -n "$channel" ] && {
												set_wifi adhoc any channel "$channel" bssid_wellformed
											}

											[ -n "$chanbw" ] && {
												set_wifi adhoc any chanbw "$chanbw"
											}

											[ -n "$mcast_rate" ] && {
												set_wifi adhoc any mcast_rate "$mcast_rate"
											}

											set_wifi any any htmode 'HT20'
										}
									} done
								;;
							esac

							shift
						} done
					}

					# option: chantest? chanbwtest? -> testtime 3:50

					longshot channel 165 chanbw 10 mhz mcast 18000 name 'feld-kindergarten'    nodes '249 237'
					longshot channel  48 chanbw 20 mhz mcast 18000 name 'feld-sollstedt-krahl' nodes '250 251 247'
					longshot channel 157 chanbw 20 mhz mcast 18000 name 'heidenroder-thalmann' nodes '253 252'
					longshot channel  60 chanbw 10 mhz mcast 18000 name 'kindergarten-puppe'   nodes '214 213'
					longshot channel 100 chanbw 20 mhz mcast 18000 name 'kindergarten-kirch33' nodes '227 228'
					longshot channel 112 chanbw 20 mhz mcast 18000 name 'puppe-schuetze'       nodes '215 216'
					longshot channel  48 chanbw 20 mhz mcast 18000 name 'kindergarten-klaus70' nodes '230 229'


# 5180 MHz [36]
# 5200 MHz [40]
# 5220 MHz [44]
# 5240 MHz [48]
# 5260 MHz [52]
# 5280 MHz [56]
# 5300 MHz [60]
# 5320 MHz [64]
# 5500 MHz [100]
# 5520 MHz [104]
# 5540 MHz [108]
# 5560 MHz [112]
# 5580 MHz [116]
# 5600 MHz [120]
# 5620 MHz [124]
# 5640 MHz [128]
# 5660 MHz [132]
# 5680 MHz [136]
# 5700 MHz [140]
# 5745 MHz [149]
# 5765 MHz [153]
# 5785 MHz [157]
# 5805 MHz [161]
# 5825 MHz [165]
				;;
			esac
		;;
		boltenhagen*)
			uci set olsrd.@meta[0].hnaslave=0

			case "$( uci get system.@profile[0].nodenumber )" in
				2|170|139)
					# master, surfstation IB + DH
				;;
				*)
					uci set dhcp.lan.ignore=1
				;;
			esac

			case "$CONFIG_PROFILE" in
				*ap)
					uci set wireless.radio0.htmode="HT20"

					grep -q "sven-ola" "/etc/init.d/olsrd" && {
						uci set olsrd.@Interface[0].speed=20
					}

#					case "$NODENUMBER" in
#						# node 2 = nexthop
#						xxx30)
#							uci set olsrd.@olsrd[0].disabled=1
#							touch "/tmp/service_olsrd_nowatching"
#						;;
#					esac
#
#					is_room_dorfhotel()	# later via hostname
#					{
#						case "$NODENUMBER" in
#							6|71|75|76|77|78|79|80|83|84|85|86|87|88|89|90|92|95|96|97|98|99|101|102|103|104|105|106|108|142|143|144|146)
#								return 0
#							;;
#							*)
#								return 1
#							;;
#						esac
#					}
#
#					is_room_iberotel()	# later via hostname
#					{
#						case "$NODENUMBER" in
#							3|4|5|8|9|10|11|12|13|14|15|16|17|18|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|64|65|66|67|68|69|72|73)
#								return 0
#							;;
#							*)
#								return 1
#							;;
#						esac
#					}
#
#					is_room_dorfhotel && uci set wireless.@wifi-iface[0].ssid="Dorfhotel $NODENUMBER"
#					is_room_iberotel  && uci set wireless.@wifi-iface[0].ssid="Iberotel $NODENUMBER"
				;;
				*_hybrid|*_adhoc)
					uci set wireless.radio0.channel='11'
					uci set wireless.@wifi-iface[0].bssid='02:be:ef:ca:ff:ee'
				;;
			esac

#			set_wifi ap 5ghz ssid 'Weisse Wiek Konferenz'
			set_wifi ap 5ghz disabled '1'
#			set_wifi ap 2ghz ssid "Weisse Wiek $NODENUMBER"
			set_wifi ap 2ghz ssid "Weisse Wiek"
			set_wifi adhoc 5ghz ssid 'x'
			set_wifi adhoc 2ghz ssid 'X'
		;;
		spbansin*)
			uci set olsrd.@meta[0].hnaslave=0

			set_wifi ap 5ghz ssid 'Seepark highspeed'
			set_wifi ap 2ghz ssid "Seepark"			# TODO
			set_wifi adhoc 5ghz ssid 'x'
			set_wifi adhoc 2ghz ssid 'X'
		;;
		dhfleesensee*)
			uci set olsrd.@meta[0].hnaslave=0

			set_wifi ap 5ghz ssid 'Dorfhotel highspeed'
			set_wifi ap 2ghz ssid "Dorfhotel $NODENUMBER"
			set_wifi adhoc 5ghz ssid 'x'
			set_wifi adhoc 2ghz ssid 'X'
		;;
		schoeneck*)
			uci set system.@monitoring[0].switch_error='ignore'
			uci set olsrd.@meta[0].hnaslave=0

			set_wifi ap    2ghz txpower '15'
			set_wifi ap    2ghz ssid "IFA Schoeneck $NODENUMBER"
			set_wifi ap    5ghz disabled '1'			# !!!
			set_wifi adhoc 2ghz bssid '02:ca:ff:ee:00:11'
			set_wifi adhoc 2ghz channel '11'
			set_wifi adhoc any  htmode 'HT20'
			set_wifi adhoc 2ghz ssid 'x'
			set_wifi adhoc 2ghz mcast_rate '6000'

			case "$NODENUMBER" in
				228|230|234|231|235|232|229|233)
					# all switched together, netio230b on master
					uci set dhcp.lan.ignore=1
				;;
				2)
					set_wifi any any disabled '1'

					uci add network alias
					uci set network.@alias[-1].interface="wan"
					uci set network.@alias[-1].proto='static'
					uci set network.@alias[-1].ipaddr='192.168.2.108'
					uci set network.@alias[-1].netmask='255.255.255.0'
				;;
			esac
		;;
		*)
			# enforce b43-hack
			[ -e "/lib/modules/$( uname -r )/b43.ko" ] && {
				local file="/lib/wifi/mac80211.sh"
				local keyword="keyspec}"	# must be at the end of a line
				local command1='config_get bitrates "$device" bitrates'
				local command2='test -n "$bitrates" \&\& iw dev "$ifname" set bitrates legacy-2.4 $bitrates'

				[ "$( uci get wireless.@wifi-iface[0].mode )" = "adhoc" ] && {
					[ -n "$( uci get wireless.radio0.bitrates )" ] || {
						uci set wireless.radio0.bitrates="6 9 12 18 24 36 48 54"

						case "$( uci get wireless.@wifi-iface[0].mcast_rate )" in
							1000|2000|5500|11000)
								uci delete 'wireless.@wifi-iface[0].mcast_rate'
							;;
						esac
					}

					grep -q "$keyword"$ "$file" && {
						sed -i "s/$keyword$/$keyword ; $command1 ; $command2 /" "$file"
					}
				}
			}
		;;
	esac

	case "$HARDWARE" in
		"Buffalo WHR-HP-G54")
			case "$( uci get wireless.radio0.rxantenna )-$( uci get wireless.radio0.txantenna )" in
				"1-1")
				;;
				*)
					uci set wireless.radio0.rxantenna=1
					uci set wireless.radio0.txantenna=1
					_log do uci_commit daemon alert 'wireless: changed antenna settings'
					uci commit wireless
				;;
			esac
		;;
		"Linksys WRT54G"*)
			case "$( uci get wireless.radio0.rxantenna )-$( uci get wireless.radio0.txantenna )" in
				"0-0")
				;;
				*)
					uci set wireless.radio0.rxantenna=0
					uci set wireless.radio0.txantenna=0
					_log do uci_commit daemon alert 'wireless: changed antenna settings'
					uci commit wireless
				;;
			esac
		;;
		"TP-LINK TL-WR1043ND")
			# use driver defaults
			case "$CONFIG_PROFILE" in
				*ap)
				;;
				*)
					uci delete 'wireless.radio0.txpower'
				;;
			esac
		;;
	esac

	case "$( uci get wireless.radio0.hwmode )" in
		*'n'*)
			# 802.11n works with distributed beaconing
			uci set wireless.radio0.beacon_int=100
		;;
	esac

	case "$( uci get wireless.radio0.htmode )" in
		HT40*)
			uci set wireless.radio0.noscan="1"
		;;
	esac

	# fix for forgotten network
	case "$CONFIG_PROFILE" in
		*hybrid)
			grep -q "wlanadhoc" "/etc/config/wireless" && {
				uci show network | grep -q ^"network.wlanadhoc=" || {
					uci set network.wlanadhoc=interface
					uci set network.wlanadhoc.proto=static
					uci set network.wlanadhoc.ipaddr=$(  uci get network.wlan.ipaddr )
					uci set network.wlanadhoc.netmask=$( uci get network.wlan.netmask )
				}
			}
		;;
	esac

	# specials for testnetwork
	case "$CONFIG_PROFILE" in
		liszt28*)
			[ -h '/www/webcam.jpg' ] && {
				uci show system | grep -q 'webcam' || {
					uci add system webcam
					uci set system.@webcam[-1].storage_path='bastian@10.63.2.34:'
				}
			}

			# not needed for >= r39139
			[ -e '/lib/wifi/hostapd.sh' ] && {
				grep -q "unlimited" "/lib/wifi/hostapd.sh" || {
					sed -i 's/hostapd -P/ulimit -c unlimited; &/' '/lib/wifi/hostapd.sh'
				}
			}

			case "x-$NODENUMBER" in
				99)
					uci set olsrd.@meta[0].watch_ip='10.63.2.25'
					uci set olsrd.@meta[0].watch_value='2000'
				;;
				2)
					uci set olsrd.@meta[0].watch_ip='10.63.76.1'
					uci set olsrd.@meta[0].watch_value='3000'
				;;
				112)
					uci set olsrd.@meta[0].watch_ip='10.63.6.1'
					uci set olsrd.@meta[0].watch_value='3000'
				;;
				6)
					uci set olsrd.@meta[0].watch_ip='10.63.112.1'
					uci set olsrd.@meta[0].watch_value='3000'
				;;
				10)
					uci set olsrd.@meta[0].watch_ip='10.63.6.3'
					uci set olsrd.@meta[0].watch_value='2000'
				;;
			esac
		;;
	esac

	batman_kmodules_are_deactivated()
	{
		kmodule_is_deactivated 'batman-adv'
	}

	batman_kmodules_force_activation()
	{
		kmodule_force_activation 'batman-adv'
		kmodule_force_activation 'ebtables'
		kmodule_force_activation 'macvlan'
	}

	batman_kmodules_force_deactivation()
	{
		kmodule_force_deactivation 'batman-adv'
		kmodule_force_deactivation 'ebtables'
		kmodule_force_deactivation 'macvlan'
	}

	batman_needed()
	{
		[ -e "/usr/sbin/batctl" ] || return 1

#		batman_kmodules_are_deactivated || {
#			grep -q ^'batman_adv ' '/proc/modules' || return 1
#		}

		case "$CONFIG_PROFILE" in
			liszt28*)
				case "xxx-$NODENUMBER" in
					103|77|11|112|62|223|48|21|3|13|2|23|76|98|25|24|222|20|15|58|99|8)
						return 0
					;;
					*)
					;;
				esac
			;;
			dhsylt*)
				case "$NODENUMBER" in
					18|25|26)
					;;
					*)
						return 0
					;;
				esac
			;;
			xxx-schoeneck*|xxx-apphalle*|marinabh*)
				return 0
			;;
		esac

		return 1
	}

	if batman_needed; then
		uci set batman-adv.bat0.orig_interval=1000	# default = 1000 ms

		local file='/etc/init.d/dnsmasq'
		fgrep -q 'netmask_dhcpcalc' "$file" || {
			sed -i 's/start$/&; local netmask_dhcpcalc; config_get netmask_dhcpcalc "$cfg" netmask_dhcpcalc/' "$file"
			sed -i 's/ $netmask / ${netmask_dhcpcalc:-$netmask} /' "$file"
			sed -i 's/,$NETMASK,/,$netmask,/' "$file"
			# since r39101 needed:
			sed -i 's/eval \(.*\)/&\n	test "$PREFIX" = "${netmask_dhcpcalc:-$netmask}" \&\& netmask="$NETMASK"/' "$file"
		}

		fgrep ' "$dynamicdhcp" = "0" ' "$file" | fgrep -q 'test' || {
			sed -i "s/.* \"\$dynamicdhcp\" = \"0\" .*/& ; test \"\$START\" = '192.168.0.2' \&\& START='192.168.$NODENUMBER.2'; test \"\$END\" = '192.168.0.254' \&\& END='192.168.$NODENUMBER.254'/" "$file"
		}

		batman_kmodules_are_deactivated && batman_kmodules_force_activation
	else
		batman_kmodules_are_deactivated || batman_kmodules_force_deactivation

		case "$CONFIG_PROFILE" in
			*ap|*hybrid)
				uci set dhcp.wlan.ignore=0
			;;
		esac
	fi

	batman_needed && {
		case "$CONFIG_PROFILE" in
			apphalle*)
				set_wifi ap    any  ssid "$( _weblogin metadata_locationname | cut -d' ' -f1 )"
				set_wifi any   5ghz txpower '19'
				set_wifi any   2ghz txpower '10'
				set_wifi any   any  htmode 'HT20'
				set_wifi adhoc 5ghz ssid 'x'
				set_wifi adhoc 2ghz ssid 'X'
			;;
			boltenhagendh*)
				uci set wireless.radio0.htmode="HT20"
				set_wifi ap    5ghz ssid 'Weisse Wiek highspeed'
				set_wifi ap    2ghz ssid 'Weisse Wiek'
				set_wifi adhoc 5ghz ssid 'x'
				set_wifi adhoc 2ghz ssid 'X'
			;;
			schoeneck_ap)
				uci set wireless.radio0.htmode="HT20"
				set_wifi ap 2ghz ssid 'IFA Schoeneck'
				set_wifi ap 5ghz ssid 'IFA highspeed'
			;;
			schoeneck_hybrid)
				set_wifi ap 2ghz ssid 'IFA Schoeneck'
				set_wifi ap 5ghz ssid 'IFA highspeed'
			;;
			olympia_hybrid)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="o"
				uci set wireless.@wifi-iface[1].ssid="Hotel Olympia"
			;;
			liszt28*)
				uci set wireless.radio0.htmode="HT20"
				set_wifi ap    5ghz ssid 'Schlachtfest highspeed'
				set_wifi ap    2ghz ssid 'Schlachtfest'
				set_wifi adhoc 5ghz ssid 'x'
				set_wifi adhoc 2ghz ssid ':'
			;;
			dhsylt_hybrid)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="o"
				uci set wireless.@wifi-iface[1].ssid="Dorfhotel Sylt"
			;;
			dhsylt_ap)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="Dorfhotel Sylt"
				[ -n "$( uci get wireless.@wifi-iface[1].ssid )" ] && uci set wireless.@wifi-iface[1].ssid="Dorfhotel Sylt"
			;;
			marinabh_hybrid)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="o"
				uci set wireless.@wifi-iface[1].ssid="Marina Boltenhagen"
			;;
			marinabh_ap)
				uci set wireless.radio0.htmode="HT20"
				uci set wireless.@wifi-iface[0].ssid="Marina Boltenhagen"
			;;
		esac

		local dns_ip i
		local router_ip="192.168.$NODENUMBER.1"
		local master_gateway

		case "$CONFIG_PROFILE" in
			dhsylt*|olympia*|marinabh*)
				master_gateway="192.168.2.1"
				dns_ip="$router_ip"
			;;
			apphalle*)
				router_ip="192.168.0.1"
				master_gateway="192.168.3.1"
				dns_ip="$router_ip"
			;;
			schoeneck*|boltenhagendh*)
				router_ip="192.168.0.1"
				master_gateway="192.168.2.1"
				dns_ip="$router_ip"
			;;
			liszt28*)
				router_ip="192.168.0.1"		# every router has this ip (there is never a NODE 0)
				master_gateway="192.168.99.1"
				dns_ip="$router_ip"
			;;
		esac

		local startup="/tmp/WIFI_SPECIALS.sh"

		integer2fourhex()	# e.g. 8 -> 00:08
		{			# fixme! max = 999 fixme! generalize it, join with bssid_wellformed()
			if [ $1 -lt 100 ]; then
				if [ $1 -lt 10 ]; then
					echo "00:0$1"
				else
					echo "00:$1"
				fi
			else
				echo "0$( echo "$1" | cut -b 1 ):$( echo "$1" | cut -b 2-3 )"
			fi
		}

		set_mac()
		{
			local uci_path="$1"
			local mac="$2"
			local file='/www/monitoring.wifimac'

			if [ -e "$file" ]; then
				uci set "$uci_path"="$mac"
			else
				uci delete "$uci_path"
			fi
		}

		batalias_add_if_needed()
		{
			local funcname='batalias_add_if_needed'
			local ifname_ask="$1"
			local ifname proto i j devname mac index channel

			for i in $(seq 0 100); do {
				proto="$( uci -q get network.@alias[${i}].proto )" || continue

				case "$proto" in
					'batadv')
						ifname="$( uci -q get network.@alias[${i}].interface )"
						[ "$ifname_ask" = "$ifname" ] && {
							uci delete "network.@alias[$i]"
						}
					;;
				esac
			} done

			uci add network alias
			uci set network.@alias[-1].interface="$ifname_ask"
			uci set network.@alias[-1].proto=batadv
			uci set network.@alias[-1].mesh=bat0

			case "$ifname_ask" in
				'lan'|'wan')
					case "$ifname_ask" in
						'lan')
							mac="02:00:ca:b1:$( integer2fourhex "$NODENUMBER" )"
						;;
						'wan')
							mac="02:00:de:ad:$( integer2fourhex "$NODENUMBER" )"
						;;
					esac

					set_mac "network.$ifname_ask.macaddr" "$mac"
				;;
				'wlan'*)
					# e.g. wlan | wlanadhoc | wlanadhocRADIO1
					index="$( get_wifi network "$ifname_ask" index )" && {
						channel="$( get_wifi network "$ifname_ask" channel )"
						mac="ca:$( integer2fourhex "$channel" ):00:$( integer2fourhex "$NODENUMBER" )"

						set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
					}
				;;
			esac

			echo >>"$startup" "DEVNAME=\$( ifstatus \"$ifname_ask\" | grep '\"device\":' | cut -d'\"' -f4 )"
			echo >>"$startup" "batctl interface | grep -q ^\"\$DEVNAME: active\" || batctl if add \$DEVNAME"
		}

		# the first added interface is our originator-address (mac)
		batalias_add_if_needed 'lan'

		uci -q get network.wan >/dev/null && {
			# fixme! ejbw needs an override
			case "$( _net local_inet_offer )" in
				'wan'|'pppoe')
					echo >>"$startup" "# wan not added, because local inet-offer"
				;;
				*)
					batalias_add_if_needed 'wan'
				;;
			esac
		}

		local index mac

		# ifname = macaddress:
		# bridge = 02:00:b0:0b:$nodenumber
		# gw0    = 02:00:c0:ca:c0:1a
		#
		# lan    = 02:00:ca:b1:$nodenumber
		# wan    = 02:00:de:ad:$nodenumber
		# ap1    = 02:00:0a:00:$nodenumber
		# ap2    = 02:00:0b:00:$nodenumber
		# adhocX = ca:$chan:00:$nodenumber

		# fixme! iterate over all wifi-interfaces, e.g. 'add adhoc any/5ghz'
		case "$CONFIG_PROFILE" in
			*'_hybrid')
				get_wifi network 'wlanadhoc'       check && batalias_add_if_needed 'wlanadhoc'
				get_wifi network 'wlanadhocRADIO1' check && batalias_add_if_needed 'wlanadhocRADIO1'

				# first AP
				index="$( get_wifi network "wlan" index )" && {
					mac="02:00:0a:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}

				# second AP
				index="$( get_wifi network "wlanRADIO1" index )" && {
					mac="02:00:0b:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}
			;;
			*'_adhoc')
				get_wifi network 'wlan' check && batalias_add_if_needed 'wlan'
			;;
			*'_ap')
				# first AP
				index="$( get_wifi network "wlan" index )" && {
					mac="02:00:0a:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}
			;;
		esac

		case "$CONFIG_PROFILE" in
			*hybrid)
				for i in $(seq 0 15); do {
					[ "$( uci -q get wireless.@wifi-iface[$i].mode )" = "ap" ] && {
						echo >>"$startup" "NAME=\"\$( uci get wireless.@wifi-iface[$i].network )\""
						echo >>"$startup" "DEV=\$( ifstatus \"\$NAME\" | grep '\"device\":' | cut -d'\"' -f4 )"
						echo >>"$startup" "_log do batman daemon info \"$startup: adding DEV \$DEV to br-mybridge\""
						echo >>"$startup" "brctl addif br-mybridge \$DEV"
					}
				} done
			;;
			*ap)
				echo >>"$startup" "_log do batman daemon info \"$startup: adding DEV wlan0 to br-mybridge\""
				echo >>"$startup" "brctl addif br-mybridge wlan0"
				echo >>"$startup" "brctl addif br-mybridge wlan1	# dirty: simply fails if n/a"
			;;
		esac

#		echo "dnsmasq --address=/#/10.63.$NODENUMBER.1 -p 5353" >>"$startup"

		uci set network.mybridge="interface"
		uci set network.mybridge.type="bridge"
		uci set network.mybridge.ifname="bat0"
		uci set network.mybridge.macaddr="02:00:b0:0b:$( integer2fourhex "$NODENUMBER" )"
		uci set network.mybridge.proto="static"
		uci set network.mybridge.ipaddr="192.168.$NODENUMBER.1"
		uci set network.mybridge.netmask="255.255.0.0"
		uci set network.mybridge.netmask_dhcpcalc="255.255.255.0"

		# https://lists.open-mesh.org/pipermail/b.a.t.m.a.n/2013-November/010913.html
		local mac_gateway="02:00:c0:ca:c0:1a"
		which ebtables >/dev/null && {
			echo >>"$startup" "ebtables -A FORWARD -j DROP -d '$mac_gateway'"
			echo >>"$startup" "ebtables -t nat -A POSTROUTING -o bat0 -j DROP -s '$mac_gateway'"
			echo >>"$startup" "#  query via: ebtables -L FORWARD --Lc; ebtables -t nat -L POSTROUTING --Lc"
		}

		case "$CONFIG_PROFILE" in
			*_adhoc)
			;;
			liszt28*|schoeneck*|boltenhagendh*|apphalle*)
				# depends on kmod-macvlan
				echo >>"$startup" "_log do batman daemon info \"$startup: forcing gateways ip/mac: $router_ip/$mac_gateway\""
				echo >>"$startup" "ip link add link 'br-mybridge' 'gateway0' address '$mac_gateway' type macvlan"
				echo >>"$startup" "ip address add $router_ip/32 dev gateway0"
				echo >>"$startup" "ip link set dev gateway0 up"
			;;
		esac

		case "$CONFIG_PROFILE" in
			*_adhoc|*_hybrid)
				uci set batman-adv.bat0.bridge_loop_avoidance=1
			;;
		esac

		# every node is a server, which means: answer DHCP locally
		if [ "$( uci get network.mybridge.ipaddr )" = "$master_gateway" ]; then
			uci set batman-adv.bat0.gw_mode=server
			uci set batman-adv.bat0.gw_bandwidth="16384kbit/16384kbit"
		else
			uci set batman-adv.bat0.gw_mode=server
			uci set batman-adv.bat0.gw_bandwidth="512kbit/512kbit"

			case "$CONFIG_PROFILE" in
				schoeneck*|boltenhagendh*|apphalle*)
					# no l3-routing proto running, so we need a fix master-gateway
					uci set network.mybridge.gateway="$master_gateway"
					uci set system.@weblogin[0].authserver="$master_gateway"
				;;
			esac
		fi

		uci set dhcp.mybridge=dhcp
		uci set dhcp.mybridge.interface=mybridge
		uci set dhcp.mybridge.start=2
		uci set dhcp.mybridge.limit=253
		uci set dhcp.mybridge.leasetime=12h
		uci set dhcp.mybridge.force=1
		uci set dhcp.mybridge.ignore=0
		uci set dhcp.mybridge.netmask=255.255.0.0
		uci set dhcp.mybridge.dhcp_option="option:router,$router_ip,$dns_ip"	# fixme! dynamic set during runtime
		uci set dhcp.mybridge.leasetime=10m

		uci set dhcp.wlan.ignore=1
	}
}

		# sms.@sms[0].admin
		case "$CONFIG_PROFILE" in
			apphalle*)
				list="0174/3564025"
			;;
			schoeneck*)
				list="01729094456"
			;;
			aschbach*|hotello*)
				list="01728117657 01727772555 01775906689"
			;;
			liszt28*)
				force='true'
			;;
			spbansin*|itzehoe*)
				list="01601531855"
			;;
			tkolleg*)
				list="01714338506"
			;;
			dhfleesensee*)
				list="01604797497"
			;;
			satama*)
				# list="016096378028"
			;;
			ejbw*)
				list="01622666169"	# lars
			;;
			rehungen*)
				force='true'
			;;
		esac
