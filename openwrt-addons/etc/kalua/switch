#!/bin/sh

# swconfig dev switch0 set reset 1; /etc/init.d/network restart

_switch_query_swconfig()	# SENS: show a single switch-port of a 'swconfig'-controlled switch
{
	local funcname='switch_query_swconfig'
	local port_list="$1"
	local debug="$2"

	local type="$( uci -q get network.@switch[0].name || echo "switch0" )"	# switch0 or rtl8366rb
	local line port max_try

	[ -e '/sbin/swconfig' ] || return 1

	for port in $port_list; do {
		[ "$port" = "gap" ] && {
			_switch symbol gap
			continue
		}

		line=
		max_try=10
		while [ -z "$line" ]; do {
			line="$( swconfig dev "$type" port "$port" show | fgrep "link: port:" )"
			max_try=$(( $max_try - 1 ))
			[ $max_try -eq 0 ] && break
		} done

		[ -n "$debug" ] && \
			_log do $funcname daemon debug "type: $type port: $port line '$line'"

		# why this lead to unkown? line: '     link: port:0 link:down'

		case "$line" in
			*"link: port:$port link: down"*)
				_switch symbol down
			;;
			*"link: port:$port link:down"*)
				_switch symbol down
			;;
			*"link:up"*)
				case "$line" in
					*"full-duplex"*)
						duplex="full"
					;;
					*)
						duplex="half"
					;;
				esac

				case "$line" in
					*"speed:10baseT"*)
						_switch symbol "$duplex" 10
					;;
					*"speed:100baseT"*)
						_switch symbol "$duplex" 100
					;;
					*"speed:1000baseT"*)
						_switch symbol "$duplex" 1000
					;;
					*)
						_switch symbol "unknown" "link:up '$line'"
					;;
				esac
			;;
			*)
				_switch symbol "unknown" "port $port line: '$line'"
			;;
		esac
	} done
}

_switch_query_miitool()		# SENS: show a single switch-port of a 'mii-tool'-controlled switch
{
	local funcname='switch_query_miitool'
	local port_list="$1"
	local debug="$2"

	local line port max_try

	for port in $port_list; do {
		[ "$port" = "gap" ] && {
			_switch symbol gap
			continue
		}

		line=
		max_try=10
		while [ -z "$line" ]; do {
			line="$( mii-tool "$port" )"
			max_try=$(( $max_try - 1 ))
			[ $max_try -eq 0 ] && break
		} done

		[ -n "$debug" ] && \
			_log do $funcname daemon debug "port: $port line '$line'"

		case "$line" in
			"$port: no link")
				_switch symbol down
			;;
			*"link ok"*)			# "negotiated 100baseTx-FD, link ok"
				case "$line" in		# "negotiated 100baseTx-FD flow-control, link ok"
					*'-FD,'*|*'-FD '*)
						duplex="full"
					;;
					*)
						duplex="half"
					;;
				esac

				case "$line" in
					*" 100baseTx"*)
						_switch symbol $duplex 100
					;;
					*" 10baseT"*)
						_switch symbol $duplex 10
					;;
					*)
						_switch symbol unknown
					;;
				esac
			;;
			*)
				_switch symbol unknown
			;;
		esac
	} done
}

_switch_show()		# SENS: show all switch-ports, e.g. 'C.bB-C' = "1GB gap 100mbit/halfduplex 100mbit nothing 1GB"
{
	local funcname='switch_show'
	local debug="$1"		# string: debug OR html
	local html_preambel="$2"	# string: sets intro-text in html-mode, e.g. 'switch-usage: '

	local line duplex n list preambel

	[ "$debug" = 'html' ] && {
		[ -n "$html_preambel" ] && {
			html_preambel="<td>$html_preambel</td>"
		}

		echo -n "<table cellspacing='1' cellpadding='0'><tr>$html_preambel"

		SWITCH_SYMBOL_HTML='true'
		debug=
	}

	case "$HARDWARE" in
		'Linksys WRT54G/GS/GL'|'La Fonera 2.0N'|'ASUS WL-500g Premium v2')
			# older revisions cannot work with 'swconfig' and use 'robocfg'
			# WAN | 4 x LAN  - tested with r38650
			_switch query_swconfig "4 gap 3 2 1 0" "$debug"
		;;
		'TP-LINK TL-WR841N/ND v8')
			# WAN | 4 x LAN
			_switch query_miitool "eth0" "$debug"
			_switch query_swconfig "gap 2 3 4 1" "$debug"
		;;
		'TP-LINK TL-WR940N')
			# WAN | 4 x LAN
			_switch query_miitool "eth1" "$debug"
			_switch query_swconfig "gap 4 3 2 1" "$debug"
		;;
		"TP-LINK TL-WR1043ND"|"TP-LINK TL-WR841N/ND v7")
			# WAN | 4 x LAN
			_switch query_swconfig "0 gap 1 2 3 4" "$debug"
		;;
		'TP-LINK TL-WDR3600'|'TP-LINK TL-WDR4300'|'TP-LINK TL-WDR4310'|"TP-LINK TL-WDR3600/4300/4310"|"TP-LINK TL-WDR4900 v1")
			# WAN | 4 x LAN | CPU = port0
			_switch query_swconfig "1 gap 2 3 4 5" "$debug"
		;;
		"Buffalo WZR-HP-AG300H")
			# WAN | 4 x LAN
			_switch query_miitool "eth1" "$debug"
			_switch query_swconfig "gap 1 2 3 4" "$debug"
		;;
		"Ubiquiti Nanostation M")
			# WAN | LAN
			_switch query_swconfig '1'
			_switch query_miitool 'eth0' "$debug"
		;;
		"TP-LINK TL-WR703N v1"|"Speedport W500V"|"T-Mobile InternetBox")
			_switch query_miitool "eth0" "$debug"
		;;
		'PC Engines ALIX.2')
			# power | WAN | LAN | LAN2 | serial
			_switch query_miitool "eth0 gap eth1 gap eth2" "$debug"
		;;
		*)
			_switch symbol unimplemented
			_switch symbol gap
			_switch symbol unimplemented
			_switch symbol unimplemented
			_switch symbol unimplemented
			_switch symbol unimplemented
		;;
	esac

	[ -n "$SWITCH_SYMBOL_HTML" ] && {
		unset SWITCH_SYMBOL_HTML
		echo -n '</tr></table>'
	}

	return 0
}

_switch_symbol()	# SENS: represent each port with a short letter: [a-cA-C] = 10/100/100 half-duplex / full-duplex (capitalized)
{
	local funcname="switch_symbol"
	local duplex="$1"
	local speed="$2"

	local symbol_html symbol_text
	local color_green_colorless='#99FF99'
	local color_green_normal='#00FF00'
	local color_green_strong='#00CC00'
	local halfduplex='<big>&frac12;</big>'	# 1/2
	local port_width='&emsp;'		# has nearly the same width like 'halfduplex'

	case "${duplex}${speed}" in
		"down")
			symbol_text='-'
			symbol_html="<td bgcolor='black' title='unconnected'>$port_width</td>"
		;;
		"gap")
			symbol_text='.'
			symbol_html='<td bgcolor="white" title="gap">&thinsp;</td>'	# thin_width
		;;
		"half10")
			symbol_text='a'
			symbol_html="<td bgcolor='$color_green_colorless' title='10mbit/halfduplex'>$halfduplex</td>"
		;;
		"half100")
			symbol_text='b'
			symbol_html="<td bgcolor='$color_green_normal' title='100mbit/halfduplex'>$halfduplex</td>"
		;;
		"half1000")
			symbol_text='c'
			symbol_html="<td bgcolor='$color_green_strong' title='1000mbit/halfduplex'>$halfduplex</td>"
		;;
		"full10")
			symbol_text='A'
			symbol_html="<td bgcolor='$color_green_colorless' title='10mbit/fullduplex'>$port_width</td>"
		;;
		"full100")
			symbol_text='B'
			symbol_html="<td bgcolor='$color_green_normal' title='100mbit/fullduplex'>$port_width</td>"
		;;
		"full1000")
			symbol_text='C'
			symbol_html="<td bgcolor='$color_green_strong' title='1000mbit/fullduplex'>$port_width</td>"
		;;
		'unimplemented')
			symbol_text='u'
			symbol_html="<td bgcolor='crimson' title='unimplemented'>$port_width</td>"
		;;
		*)
			[ -e "/tmp/switch_unknown" ] || {
				touch "/tmp/switch_unknown"
				_log do $funcname daemon alert "$duplex: $speed"
			}

			symbol_text='Z'		# means: 'unknown/error'
			symbol_html="<td bgcolor='grey' title='unknown'>?</td>"
		;;
	esac

	if [ -n "$SWITCH_SYMBOL_HTML" ]; then
		echo -n "$symbol_html"
	else
		echo -n "$symbol_text"
	fi
}
